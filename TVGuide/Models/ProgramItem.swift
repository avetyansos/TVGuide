//
// ProgramItem.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ProgramItem: Codable, JSONEncodable, Hashable, Identifiable {
    public let id = UUID()
    /** Program item start time in UTC */
    public var startTime: Date?
    public var recentAirTime: ProgramItemRecentAirTime?
    /** Program length in minutes */
    public var length: Int?
    public var shortName: String?
    /** Program name to display */
    public var name: String?
    var duration: TimeInterval? {
        return TimeInterval((length ?? 1) * 60)
    }

    public init(startTime: Date? = nil, recentAirTime: ProgramItemRecentAirTime? = nil, length: Int? = nil, shortName: String? = nil, name: String? = nil) {
        self.startTime = startTime
        self.recentAirTime = recentAirTime
        self.length = length
        self.shortName = shortName
        self.name = name
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case startTime
        case recentAirTime
        case length
        case shortName
        case name
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(startTime, forKey: .startTime)
        try container.encodeIfPresent(recentAirTime, forKey: .recentAirTime)
        try container.encodeIfPresent(length, forKey: .length)
        try container.encodeIfPresent(shortName, forKey: .shortName)
        try container.encodeIfPresent(name, forKey: .name)
    }
}

